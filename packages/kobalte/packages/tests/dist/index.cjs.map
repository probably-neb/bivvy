{"version":3,"sources":["../src/events.ts","../src/utils.ts","../src/mocks.ts"],"names":[],"mappings":";AAAA,SAAS,iBAAiB;;;ACcnB,SAAS,sBAAsB;AACpC,YAAU,MAAM;AAGd,WAAO,eAAe,MAAM,yBAAyB,WAAW;AAAA,MAC9D;AAAA,MAQA,YAAY,MAAW,MAAW;AAChC,cAAM,MAAM,IAAI;AAChB,aAAK,QAAQ;AAAA,MACf;AAAA,MACA,IAAI,cAAc;AAChB,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MACA,IAAI,YAAY;AACd,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MACA,IAAI,QAAQ;AACV,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MACA,IAAI,QAAQ;AACV,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MACA,IAAI,QAAQ;AACV,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MACA,IAAI,SAAS;AACX,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,IACF;AAAA,EACF,CAAC;AAED,WAAS,MAAM;AAGb,WAAO,OAAO;AAAA,EAChB,CAAC;AACH;AAEO,SAAS,mBAAmB,MAAW,MAAW;AACvD,QAAM,MAAM,IAAI,MAAM,MAAM,EAAE,SAAS,MAAM,YAAY,KAAK,CAAC;AAC/D,SAAO;AAAA,IACL;AAAA,IACA;AAAA,MACE,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ,KAAK,UAAU;AAAA,MACvB,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,IACA;AAAA,EACF;AACA,SAAO;AACT;;;ADpEA,eAAsB,aAAa,SAA6C,MAAY;AAC1F;AAAA,IACE;AAAA,IACA,mBAAmB,eAAe,EAAE,WAAW,GAAG,aAAa,SAAS,GAAG,KAAK,CAAC;AAAA,EACnF;AACA,QAAM,QAAQ,QAAQ;AAEtB;AAAA,IACE;AAAA,IACA,mBAAmB,aAAa,EAAE,WAAW,GAAG,aAAa,SAAS,GAAG,KAAK,CAAC;AAAA,EACjF;AACA,QAAM,QAAQ,QAAQ;AACxB;;;AElBO,SAAS,sBAAsB;AACpC,SAAO,eAAe,QAAQ,cAAc;AAAA,IAC1C,UAAU;AAAA,IACV,OAAO,KAAK,GAAG,EAAE,mBAAmB,YAAU;AAAA,MAC5C,SAAS;AAAA,MACT,OAAO;AAAA,MACP,UAAU;AAAA,MACV,aAAa,KAAK,GAAG;AAAA;AAAA,MACrB,gBAAgB,KAAK,GAAG;AAAA;AAAA,MACxB,kBAAkB,KAAK,GAAG;AAAA,MAC1B,qBAAqB,KAAK,GAAG;AAAA,MAC7B,eAAe,KAAK,GAAG;AAAA,IACzB,EAAE;AAAA,EACJ,CAAC;AACH","sourcesContent":["import { fireEvent } from \"@solidjs/testing-library\";\n\nimport { createPointerEvent } from \"./utils\";\n\n/**\n * Triggers a \"touch\" event on an element.\n */\nexport async function triggerTouch(element: Document | Element | Window | Node, opts?: any) {\n  fireEvent(\n    element,\n    createPointerEvent(\"pointerdown\", { pointerId: 1, pointerType: \"touch\", ...opts }),\n  );\n  await Promise.resolve();\n\n  fireEvent(\n    element,\n    createPointerEvent(\"pointerup\", { pointerId: 1, pointerType: \"touch\", ...opts }),\n  );\n  await Promise.resolve();\n}\n","/*\n * Portions of this file are based on code from react-spectrum.\n * Copyright 2020 Adobe. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport function installPointerEvent() {\n  beforeAll(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    global.PointerEvent = class FakePointerEvent extends MouseEvent {\n      _init: {\n        pageX: number;\n        pageY: number;\n        pointerType: string;\n        pointerId: number;\n        width: number;\n        height: number;\n      };\n      constructor(name: any, init: any) {\n        super(name, init);\n        this._init = init;\n      }\n      get pointerType() {\n        return this._init.pointerType;\n      }\n      get pointerId() {\n        return this._init.pointerId;\n      }\n      get pageX() {\n        return this._init.pageX;\n      }\n      get pageY() {\n        return this._init.pageY;\n      }\n      get width() {\n        return this._init.width;\n      }\n      get height() {\n        return this._init.height;\n      }\n    };\n  });\n\n  afterAll(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    delete global.PointerEvent;\n  });\n}\n\nexport function createPointerEvent(type: any, opts: any) {\n  const evt = new Event(type, { bubbles: true, cancelable: true });\n  Object.assign(\n    evt,\n    {\n      ctrlKey: false,\n      metaKey: false,\n      shiftKey: false,\n      altKey: false,\n      button: opts.button || 0,\n      width: 1,\n      height: 1,\n    },\n    opts,\n  );\n  return evt;\n}\n","// https://jestjs.io/docs/26.x/manual-mocks#mocking-methods-which-are-not-implemented-in-jsdom\nexport function setupMatchMediaMock() {\n  Object.defineProperty(window, \"matchMedia\", {\n    writable: true,\n    value: jest.fn().mockImplementation(query => ({\n      matches: false,\n      media: query,\n      onchange: null,\n      addListener: jest.fn(), // deprecated\n      removeListener: jest.fn(), // deprecated\n      addEventListener: jest.fn(),\n      removeEventListener: jest.fn(),\n      dispatchEvent: jest.fn(),\n    })),\n  });\n}\n"]}