{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";AAQA,OAAO,YAAY;AAEnB,IAAM,SAAS;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAM,eAAe,CAAC,cAAc,UAAU;AAC9C,IAAM,eAAe,CAAC,SAAS,QAAQ,UAAU,KAAK;AACtD,IAAM,mBAAmB,CAAC,MAAM,QAAQ,QAAQ,OAAO;AAOvD,IAAO,cAAQ,OAAO,YAA0C,CAAC,EAAE,SAAS,KAAK,IAAI,CAAC,MAAM;AAC1F,SAAO,CAAC,EAAE,WAAW,MAAM;AACzB,eAAW,SAAS,QAAQ;AAC1B,iBAAW,GAAG,MAAM,IAAI,KAAK,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC;AACrD,iBAAW,GAAG,MAAM,QAAQ,KAAK,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC;AAC/D,iBAAW,GAAG,MAAM,UAAU,KAAK,IAAI,uBAAuB,KAAK,KAAK;AACxE,iBAAW,GAAG,MAAM,SAAS,KAAK,IAAI,sBAAsB,KAAK,OAAO;AAAA,IAC1E;AAEA,eAAW,eAAe,cAAc;AACtC,iBAAW,GAAG,MAAM,IAAI,WAAW,IAAI,CAAC,uBAAuB,WAAW,IAAI,CAAC;AAC/E,iBAAW,GAAG,MAAM,QAAQ,WAAW,IAAI,CAAC,4BAA4B,WAAW,KAAK,CAAC;AACzF;AAAA,QACE,GAAG,MAAM,UAAU,WAAW;AAAA,QAC9B,oCAAoC,WAAW;AAAA,MACjD;AACA;AAAA,QACE,GAAG,MAAM,SAAS,WAAW;AAAA,QAC7B,mCAAmC,WAAW;AAAA,MAChD;AAAA,IACF;AAEA,eAAW,SAAS,cAAc;AAChC,iBAAW,GAAG,MAAM,UAAU,KAAK,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC;AACnE,iBAAW,GAAG,MAAM,cAAc,KAAK,IAAI,CAAC,sBAAsB,KAAK,KAAK,CAAC;AAC7E,iBAAW,GAAG,MAAM,gBAAgB,KAAK,IAAI,8BAA8B,KAAK,MAAM;AACtF,iBAAW,GAAG,MAAM,eAAe,KAAK,IAAI,6BAA6B,KAAK,QAAQ;AAAA,IACxF;AAEA,eAAW,aAAa,kBAAkB;AACxC,iBAAW,GAAG,MAAM,oBAAoB,SAAS,IAAI;AAAA,QACnD,2BAA2B,SAAS;AAAA,MACtC,CAAC;AACD,iBAAW,GAAG,MAAM,wBAAwB,SAAS,IAAI;AAAA,QACvD,gCAAgC,SAAS;AAAA,MAC3C,CAAC;AACD;AAAA,QACE,GAAG,MAAM,0BAA0B,SAAS;AAAA,QAC5C,wCAAwC,SAAS;AAAA,MACnD;AACA;AAAA,QACE,GAAG,MAAM,yBAAyB,SAAS;AAAA,QAC3C,uCAAuC,SAAS;AAAA,MAClD;AAAA,IACF;AAAA,EACF;AACF,CAAC","sourcesContent":["/*!\n * Portions of this file are based on code from headlessui.\n * MIT Licensed, Copyright (c) 2020 Tailwind Labs.\n *\n * Credits to the Tailwind Labs team:\n * https://github.com/tailwindlabs/headlessui/blob/8e1e19f94c28af68c05becc80bf89575e1fa1d36/packages/@headlessui-tailwindcss/src/index.ts\n */\n\nimport plugin from \"tailwindcss/plugin\";\n\nconst STATES = [\n  \"valid\",\n  \"invalid\",\n  \"required\",\n  \"disabled\",\n  \"readonly\",\n  \"checked\",\n  \"indeterminate\",\n  \"selected\",\n  \"pressed\",\n  \"expanded\",\n  \"opened\",\n  \"closed\",\n  \"highlighted\",\n  \"current\",\n  \"placeholder-shown\",\n  \"visible\",\n  \"animate\",\n];\nconst ORIENTATIONS = [\"horizontal\", \"vertical\"];\nconst SWIPE_STATES = [\"start\", \"move\", \"cancel\", \"end\"];\nconst SWIPE_DIRECTIONS = [\"up\", \"down\", \"left\", \"right\"];\n\nexport interface KobalteTailwindPluginOptions {\n  /** The prefix of generated classes. */\n  prefix?: string;\n}\n\nexport default plugin.withOptions<KobalteTailwindPluginOptions>(({ prefix = \"ui\" } = {}) => {\n  return ({ addVariant }) => {\n    for (const state of STATES) {\n      addVariant(`${prefix}-${state}`, [`&[data-${state}]`]);\n      addVariant(`${prefix}-not-${state}`, [`&:not([data-${state}])`]);\n      addVariant(`${prefix}-group-${state}`, `:merge(.group)[data-${state}] &`);\n      addVariant(`${prefix}-peer-${state}`, `:merge(.peer)[data-${state}] ~ &`);\n    }\n\n    for (const orientation of ORIENTATIONS) {\n      addVariant(`${prefix}-${orientation}`, [`&[data-orientation='${orientation}']`]);\n      addVariant(`${prefix}-not-${orientation}`, [`&:not([data-orientation='${orientation}'])`]);\n      addVariant(\n        `${prefix}-group-${orientation}`,\n        `:merge(.group)[data-orientation='${orientation}'] &`,\n      );\n      addVariant(\n        `${prefix}-peer-${orientation}`,\n        `:merge(.peer)[data-orientation='${orientation}'] ~ &`,\n      );\n    }\n\n    for (const state of SWIPE_STATES) {\n      addVariant(`${prefix}-swipe-${state}`, [`&[data-swipe='${state}']`]);\n      addVariant(`${prefix}-not-swipe-${state}`, [`&:not([data-swipe='${state}'])`]);\n      addVariant(`${prefix}-group-swipe-${state}`, `:merge(.group)[data-swipe='${state}'] &`);\n      addVariant(`${prefix}-peer-swipe-${state}`, `:merge(.peer)[data-swipe='${state}'] ~ &`);\n    }\n\n    for (const direction of SWIPE_DIRECTIONS) {\n      addVariant(`${prefix}-swipe-direction-${direction}`, [\n        `&[data-swipe-direction='${direction}']`,\n      ]);\n      addVariant(`${prefix}-not-swipe-direction-${direction}`, [\n        `&:not([data-swipe-direction='${direction}'])`,\n      ]);\n      addVariant(\n        `${prefix}-group-swipe-direction-${direction}`,\n        `:merge(.group)[data-swipe-direction='${direction}'] &`,\n      );\n      addVariant(\n        `${prefix}-peer-swipe-direction-${direction}`,\n        `:merge(.peer)[data-swipe-direction='${direction}'] ~ &`,\n      );\n    }\n  };\n});\n"]}